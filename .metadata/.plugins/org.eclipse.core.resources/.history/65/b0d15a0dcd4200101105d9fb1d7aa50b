package com.minhaloja.sistema_pagamento.controller;

import com.minhaloja.sistema_pagamento.dao.ClienteDAO;
import com.minhaloja.sistema_pagamento.model.Cliente;

import javafx.animation.Animation;
import javafx.animation.ScaleTransition;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.image.ImageView;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import javafx.util.Duration;

public class telaCadastroClienteController {

	@FXML TextField tfNome, tfEndereco, tfCidade, tfEmail, tfBi, tfTelefone1, tfTelefone2, tfNuit, tfConta1, tfConta2;
	
	@FXML DatePicker dpDataNascido, dpDataReg;
	
	@FXML TextArea taInfo;
	
	@FXML ComboBox<String> cbGenero, cbStatus, cbListaCliente;
	
	@FXML ImageView imgCliente;
	
	@FXML Button btnInserirImg, btnNovo, btnCancelar, btnEliminar, btnFechar, btnSalvar, btnLimpar;
	
	@FXML Label lbTotalReg;
	
	@FXML TableView<Cliente> tabelaClientes;
	
	@FXML TableColumn<Cliente, String> colNome, colTelefone1, colTelefone2, colConta1, colConta2, colInfo, colStatus;
	
	private final ClienteDAO clienteDAO = new ClienteDAO();
	
	@FXML 
	private void initialize() {
        colNome.setCellValueFactory(new PropertyValueFactory<>("nome"));
        colTelefone1.setCellValueFactory(new PropertyValueFactory<>("telefone1"));
        colTelefone2.setCellValueFactory(new PropertyValueFactory<>("telefone2"));
        colConta1.setCellValueFactory(new PropertyValueFactory<>("conta1"));
        colConta2.setCellValueFactory(new PropertyValueFactory<>("conta2"));
        colInfo.setCellValueFactory(new PropertyValueFactory<>("info"));
        colStatus.setCellValueFactory(new PropertyValueFactory<>("status"));
        
        
        tabelaClientes.setItems(clienteDAO.listarClientes());
        
        aplicarAnimacoesComponentes();
	}
	
	@FXML
	private void btnSalvarAction(ActionEvent event) {
	    try {
	        // Captura dados dos campos
	        String nome = tfNome.getText().trim();
	        String endereco = tfEndereco.getText().trim();
	        String cidade = tfCidade.getText().trim();
	        String email = tfEmail.getText().trim();
	        String bi = tfBi.getText().trim();
	        String telefone1 = tfTelefone1.getText().trim();
	        String telefone2 = tfTelefone2.getText().trim();
	        String nuit = tfNuit.getText().trim();
	        String conta1 = tfConta1.getText().trim();
	        String conta2 = tfConta2.getText().trim();
	        String info = taInfo.getText().trim();

	        String genero = cbGenero.getValue();
	        String status = cbStatus.getValue();

	        LocalDate dataNascido = dpDataNascido.getValue();
	        LocalDate dataReg = dpDataReg.getValue();

	        // Capturar imagem (se tiver)
	        byte[] imagemBytes = null;
	        if (imgCliente.getImage() != null) {
	            imagemBytes = imagemToByteArray(imgCliente.getImage());
	        }

	        // Criar objeto Cliente e setar valores
	        Cliente cliente = new Cliente();
	        cliente.setNome(nome);
	        cliente.setEndereco(endereco);
	        cliente.setCidade(cidade);
	        cliente.setEmail(email);
	        cliente.setBi(bi);
	        cliente.setTelefone1(telefone1);
	        cliente.setTelefone2(telefone2);
	        cliente.setNuit(nuit);
	        cliente.setConta1(conta1);
	        cliente.setConta2(conta2);
	        cliente.setInfo(info);
	        cliente.setGenero(genero);
	        cliente.setStatus(status);
	        cliente.setDataNascido(dataNascido);
	        cliente.setDataREG(dataReg);
	        cliente.setImagem(imagemBytes);

	        // Inserir no banco via DAO
	        boolean sucesso = vendaDAO.inserirCliente(cliente);

	        if (sucesso) {
	            alerta(Alert.AlertType.INFORMATION, "Cliente", "Cliente inserido com sucesso!");
	            limparCampos();
	            atualizarTabelaClientes();
	        } else {
	            alerta(Alert.AlertType.ERROR, "Erro", "Falha ao inserir cliente.");
	        }

	    } catch (Exception e) {
	        e.printStackTrace();
	        alerta(Alert.AlertType.ERROR, "Erro inesperado", e.getMessage());
	    }
	}

	
	@FXML
    private void fecharJanela() {
        Stage stage = (Stage) btnFechar.getScene().getWindow();
        stage.close();
    }
	
private void aplicarAnimacoesComponentes() {
        
        btnFechar.addEventHandler(MouseEvent.MOUSE_ENTERED, e -> {
            ScaleTransition scaleUp = new ScaleTransition(Duration.millis(200), btnFechar);
            scaleUp.setToX(1.05);
            scaleUp.setToY(1.05);
            scaleUp.play();
        });

        btnFechar.addEventHandler(MouseEvent.MOUSE_EXITED, e -> {
            ScaleTransition scaleDown = new ScaleTransition(Duration.millis(200), btnFechar);
            scaleDown.setToX(1.0);
            scaleDown.setToY(1.0);
            scaleDown.play();
        });

        // Efeito pulse cont√≠nuo
        ScaleTransition pulse = new ScaleTransition(Duration.seconds(1.5), btnFechar);
        pulse.setFromX(1.0);
        pulse.setFromY(1.0);
        pulse.setToX(1.03);
        pulse.setToY(1.03);
        pulse.setCycleCount(Animation.INDEFINITE);
        pulse.setAutoReverse(true);
        pulse.play();
    }
}
