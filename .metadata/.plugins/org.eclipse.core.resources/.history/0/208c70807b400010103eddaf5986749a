package com.minhaloja.sistema_pagamento.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.minhaloja.sistema_pagamento.model.Funcionario;
import com.minhaloja.sistema_pagamento.model.ItemVenda;
import com.minhaloja.sistema_pagamento.model.Produto;
import com.minhaloja.sistema_pagamento.model.Venda;
import com.minhaloja.sistema_pagamento.util.Conexao;

public class ItemVendaDAO {

	public List<ItemVenda> buscarItensComProdutoEVenda() {
	    List<ItemVenda> lista = new ArrayList<>();

	    String sql = """
	        SELECT iv.quantidade,
	               p.id AS produto_id, p.nome, p.codigo_barra, p.categoria, p.preco_venda,
	               p.referencia, p.fornecedor, p.modelo, p.cor, p.loja,
	               v.id AS venda_id, v.data, v.forma_pagamento,
	               f.nome AS funcionario_nome
	        FROM item_venda iv
	        JOIN produto p ON iv.produto_id = p.id
	        JOIN venda v ON iv.venda_id = v.id
	        LEFT JOIN funcionario f ON v.id_funcionario = f.id
	        ORDER BY v.data DESC
	    """;

	    try (Connection conn = Conexao.conectar();
	         PreparedStatement stmt = conn.prepareStatement(sql);
	         ResultSet rs = stmt.executeQuery()) {

	        while (rs.next()) {
	            // Produto
	            Produto produto = new Produto();
	            produto.setId(rs.getInt("id"));
	            produto.setNome(rs.getString("nome"));
	            produto.setCodigoBarra(rs.getString("codigoBarra"));
	            produto.setCategoria(rs.getString("categoria"));
	            produto.setPrecoVenda(rs.getDouble("precoVenda"));
	            produto.setReferencia(rs.getString("referencia"));
	            produto.setFornecedor(rs.getString("fornecedor"));
	            produto.setModelo(rs.getString("modelo"));
	            produto.setCor(rs.getString("cor"));
	            produto.setLoja(rs.getString("loja"));

	            // ItemVenda
	            ItemVenda item = new ItemVenda(produto, rs.getInt("quantidade"));
	            item.setVendaId(rs.getInt("id_venda"));

	            // Venda
	            Venda venda = new Venda();
	            venda.setId(rs.getInt("id_venda"));
	            venda.setData(rs.getDate("data").toLocalDate());
	            venda.setFormaPagamento(rs.getString("formaPagamento"));

	            // Funcion√°rio (apenas nome, simplificado)
	            /*Funcionario funcionario = new Funcionario();
	            funcionario.setNome(rs.getString("funcionario_nome"));
	            venda.setFuncionario(funcionario);*/

	            item.setVenda(venda);

	            lista.add(item);
	        }

	    } catch (SQLException e) {
	        e.printStackTrace();
	    }

	    return lista;
	}

}
