package com.minhaloja.sistema_pagamento.controller;

import java.time.LocalDate;
import java.util.List;

import com.minhaloja.sistema_pagamento.dao.ItemVendaDAO;
import com.minhaloja.sistema_pagamento.model.ItemVenda;

import javafx.animation.Animation;
import javafx.animation.ScaleTransition;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.stage.Stage;
import javafx.util.Duration;

public class telaFluxoCaixaController {

	@FXML private TableView<ItemVenda> tabelaFluxoCaixa;
	@FXML private TableColumn<ItemVenda, String> colCodigo, colNome, colCategoria, colReferencia, colFornecedor, colModelo, colCor, colLoja;
	@FXML private TableColumn<ItemVenda, Integer> colQTD;
	@FXML private TableColumn<ItemVenda, Double> colPrecoVenda;
	@FXML private TableColumn<ItemVenda, LocalDate> colData;
	@FXML private TableColumn<ItemVenda, String> colFormaPagamento;
	@FXML private TableColumn<ItemVenda, String> colFuncionario;
	
	@FXML private ComboBox<String> comboCategoria;
	
	@FXML private Button btnFechar;
	
	@FXML private ChoiceBox<String> cbCategoria;
	
	private ObservableList<ItemVenda> listaOriginalItemVenda;

	private final ItemVendaDAO itemVendaDAO = new ItemVendaDAO();
    
    @FXML
    private void initialize() {
    	colCodigo.setCellValueFactory(new PropertyValueFactory<>("codigoBarra"));
        colNome.setCellValueFactory(new PropertyValueFactory<>("nome"));
        colCategoria.setCellValueFactory(new PropertyValueFactory<>("categoria"));
        colQTD.setCellValueFactory(new PropertyValueFactory<>("quantidade"));
        colPrecoVenda.setCellValueFactory(new PropertyValueFactory<>("subtotal"));
        colFornecedor.setCellValueFactory(new PropertyValueFactory<>("fornecedor"));
        colModelo.setCellValueFactory(new PropertyValueFactory<>("modelo"));
        colReferencia.setCellValueFactory(new PropertyValueFactory<>("referencia"));
        colCor.setCellValueFactory(new PropertyValueFactory<>("cor"));
        colLoja.setCellValueFactory(new PropertyValueFactory<>("loja"));
        colData.setCellValueFactory(new PropertyValueFactory<>("data"));
        colFormaPagamento.setCellValueFactory(new PropertyValueFactory<>("formaPagamento"));
        colFuncionario.setCellValueFactory(new PropertyValueFactory<>("idCaixa"));;
        
        List<ItemVenda> lista = itemVendaDAO.buscarItensComProdutoEVenda();
        System.out.println("Total de itens retornados: " + lista.size());
        tabelaFluxoCaixa.setItems(listaOriginalItemVenda);
        
        carregarCategoriasNoChoiceBox();
        aplicarAnimacoesComponentes();

    }
    
    @FXML
    private void carregarCategoriasNoChoiceBox() {
        List<String> categorias = itemVendaDAO.listarCategoriasUnicas();
        cbCategoria.getItems().setAll(categorias);
    }
    
    @FXML
    private void fecharJanela() {
        Stage stage = (Stage) btnFechar.getScene().getWindow();
        stage.close();
    }
    
    private void aplicarAnimacoesComponentes() {
        
        btnFechar.addEventHandler(MouseEvent.MOUSE_ENTERED, e -> {
            ScaleTransition scaleUp = new ScaleTransition(Duration.millis(200), btnFechar);
            scaleUp.setToX(1.05);
            scaleUp.setToY(1.05);
            scaleUp.play();
        });

        btnFechar.addEventHandler(MouseEvent.MOUSE_EXITED, e -> {
            ScaleTransition scaleDown = new ScaleTransition(Duration.millis(200), btnFechar);
            scaleDown.setToX(1.0);
            scaleDown.setToY(1.0);
            scaleDown.play();
        });

        // Efeito pulse cont√≠nuo
        ScaleTransition pulse = new ScaleTransition(Duration.seconds(1.5), btnFechar);
        pulse.setFromX(1.0);
        pulse.setFromY(1.0);
        pulse.setToX(1.03);
        pulse.setToY(1.03);
        pulse.setCycleCount(Animation.INDEFINITE);
        pulse.setAutoReverse(true);
        pulse.play();
    }


}
