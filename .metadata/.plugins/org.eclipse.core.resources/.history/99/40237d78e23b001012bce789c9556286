package com.minhaloja.sistema_pagamento.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.Statement;

import com.minhaloja.sistema_pagamento.model.FormaPagamento;
import com.minhaloja.sistema_pagamento.model.Funcionario;
import com.minhaloja.sistema_pagamento.util.Conexao;

import javafx.scene.control.Alert;

public class FormaPagamentoDAO {
	
	public FormaPagamentoDAO() {
		criarTabelaSeNaoExistir();
	}
	
	public void registrarConta(FormaPagamento formaPagamento) {
	    String sql = """
	        INSERT INTO funcionarios(nome, bi, endereco, bairro, cidade, telefone1, 
	        telefone2, nuit, dataNascido, cargo, contaBancaria1, contaBancaria2, dataInicio, dataFim, salario,
	        alimentacao, transporte, imagemFuncionario, imagemBi, codigo, loja) 
	        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
	    """;

	    try (Connection conn = Conexao.conectar(); PreparedStatement pstmt = conn.prepareStatement(sql)) {
	        pstmt.setString(1, formaPagamento.getNome());
	        pstmt.setString(2, formaPagamento.getNumeroBi());
	        pstmt.setString(3, formaPagamento.getEndereco());
	        pstmt.setString(4, formaPagamento.getBairro());
	        pstmt.setString(5, formaPagamento.getCidade());
	        pstmt.setString(6, formaPagamento.getTelefone1());
	        pstmt.setString(7, formaPagamento.getTelefone2());
	        pstmt.setString(8, formaPagamento.getNuit());

	        // Datas (LocalDate para java.sql.Date)
	        pstmt.setDate(9, formaPagamento.getDataNascido() != null ? java.sql.Date.valueOf(formaPagamento.getDataNascido()) : null);
	        pstmt.setString(10, formaPagamento.getCargo());
	        pstmt.setString(11, formaPagamento.getContaBancaria1());
	        pstmt.setString(12, formaPagamento.getContaBancaria2());
	        pstmt.setDate(13, formaPagamento.getDataInicio() != null ? java.sql.Date.valueOf(formaPagamento.getDataInicio()) : null);
	        pstmt.setDate(14, formaPagamento.getDataFim() != null ? java.sql.Date.valueOf(formaPagamento.getDataFim()) : null);
	        
	        pstmt.setInt(15, formaPagamento.getSalario());
	        pstmt.setInt(16, formaPagamento.getAlimentacao());
	        pstmt.setInt(17, formaPagamento.getTransporte());
	        pstmt.setBytes(18, formaPagamento.getImagemFuncionario());
	        pstmt.setBytes(19, formaPagamento.getImagemBi());
	        pstmt.setDouble(20, formaPagamento.getCodigo());
	        pstmt.setString(21, formaPagamento.getLoja());

	        pstmt.executeUpdate();

	        Alert alerta = new Alert(Alert.AlertType.INFORMATION);
	        alerta.setTitle("Sucesso");
	        alerta.setHeaderText(null);
	        alerta.setContentText("Funcionário salvo com sucesso!");
	        alerta.showAndWait();
	    } catch (SQLIntegrityConstraintViolationException e) {
	    	Alert alerta = new Alert(Alert.AlertType.WARNING);
	        alerta.setTitle("Funcionário já existe");
	        alerta.setHeaderText("Cadastro duplicado");
	        alerta.setContentText("Já existe um funcionário com o mesmo número de BI.");
	        alerta.showAndWait();
	    } catch (SQLException e) {
	        e.printStackTrace();
	        Alert alerta = new Alert(Alert.AlertType.ERROR);
	        alerta.setTitle("Erro");
	        alerta.setHeaderText("Erro ao salvar funcionário");
	        alerta.setContentText(e.getMessage());
	        alerta.showAndWait();
	    }
	    
	}

	private void criarTabelaSeNaoExistir() {
    	String sql = """
    		    CREATE TABLE IF NOT EXISTS formaPagamento (
    			    id VARCHAR (100),
    		        nome VARCHAR(255) NOT NULL,
    		        numeroConta VARCHAR (100),
    		        nomeResponsavel VARCHAR (255),
    		        email VARCHAR (255)
    		    );
    		""";

        try (Connection conn = Conexao.conectar(); Statement stmt = conn.createStatement()) {
            stmt.execute(sql);
        } catch (SQLException e) {
            System.out.println("Erro ao criar tabela: " + e.getMessage());
        }
    }
}
