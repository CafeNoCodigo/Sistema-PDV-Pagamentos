package com.minhaloja.sistema_pagamento.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;

import com.minhaloja.sistema_pagamento.model.Produto;
import com.minhaloja.sistema_pagamento.util.Conexao;

import javafx.scene.control.Alert;

public class FuncionarioDAO {
	
	public FuncionarioDAO() {
		criarTabelaSeNaoExistir();
	}

	private void criarTabelaSeNaoExistir() {
    	String sql = """
    		    CREATE TABLE IF NOT EXISTS funcionarios (
    		        id INT PRIMARY KEY AUTO_INCREMENT,
    		        nome VARCHAR(255) NOT NULL,
    		        bi VARCHAR(50),
    		        endereco VARCHAR(255),
    		        bairro VARCHAR(255),
    		        cidade VARCHAR(100),
    		        telefone1 DOUBLE,
    		        telefone2 DOUBLE,
    		        nuit VARCHAR(100),
    		        dataNascido DATE,
    		        cargo VARCHAR(100),
    		        contaBancaria1 VARCHAR(100),
    		        contaBancaria2 VARCHAR(100),
    		        dataInicio DATE,
    		        dataFim DATE,
    		        salario INT,
    		        alimentacao INT,
    		        transporte INT,
    		        imagemFuncionario BLOB,
    		        imagemBi BLOB,
    		        codigo DOUBLE,
    		        loja VARCHAR(100)
    		    );
    		""";

        try (Connection conn = Conexao.conectar(); Statement stmt = conn.createStatement()) {
            stmt.execute(sql);
        } catch (SQLException e) {
            System.out.println("Erro ao criar tabela: " + e.getMessage());
        }
    }
	
	public void salvarProduto(Produto funcionario) {
    	/*if (produtoExiste(produto)) {
            System.out.println("Produto já cadastrado. Cadastro cancelado.");
         
            Alert alerta = new Alert(Alert.AlertType.INFORMATION);
            alerta.setTitle("Erro");
            alerta.setHeaderText(null);
            alerta.setContentText("Produto Já Existe!");
            alerta.showAndWait();
            return;
        }
    	
    	if (produtoExistePorNomeECategoria(produto.getNome(), produto.getCategoria())) {
            System.out.println("Já existe um produto com este nome na mesma categoria.");
        
            Alert alerta = new Alert(Alert.AlertType.INFORMATION);
            alerta.setTitle("Atenção!");
            alerta.setHeaderText(null);
            alerta.setContentText("Já existe um produto com este nome na mesma categoria!");
            alerta.showAndWait();
            return;
        }
    	
    	if (produtoExistePorCodigoBarra(produto.getCodigoBarra())) {
            System.out.println("Produto com este código de barras já existe.");
            
            Alert alerta = new Alert(Alert.AlertType.INFORMATION);
            alerta.setTitle("Atenção!");
            alerta.setHeaderText(null);
            alerta.setContentText("Produto com este código de barras já existe!");
            alerta.showAndWait();
            return;
        }*/
    	
        String sql = """
            INSERT INTO funcionarios(nome, bi, endereco, bairro, cidade, telefone1, 
            telefone2, nuit, dataNascido, cargo, contaBancaria1, contaBancaria2, dataInicio, dataFim, salario,
            alimentacao, transporte, imagemFuncionario, imagemBi, codigo, loja) 
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
        """;

        try (Connection conn = Conexao.conectar(); PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setString(1, funcionario.getNome());
            pstmt.setString(2, funcionario.getNumeroBi());
            pstmt.setDouble(3, funcionario.getPrecoVenda());
            pstmt.setDouble(4, funcionario.getPrecoMestre());
            pstmt.setString(5, funcionario.getCategoria());
            pstmt.setString(6, funcionario.getGarantia());
            pstmt.setString(7, funcionario.getReferencia());
            pstmt.setInt(8, funcionario.getEstoque());
            pstmt.setString(9, funcionario.getLoja());
            pstmt.setString(10, funcionario.getFabricante());
            pstmt.setString(11, funcionario.getFornecedor());
            pstmt.setString(12, funcionario.getInfoAdicional());
            pstmt.setString(13, funcionario.getCodigoBarra());
            pstmt.setBytes(14, funcionario.getQrCode());
            pstmt.setString(15, funcionario.getModelo());
            pstmt.setString(16, funcionario.getCodigo());
            pstmt.setString(17, funcionario.getCor());
            pstmt.setBytes(18, funcionario.getImagem());

            pstmt.executeUpdate();
            System.out.println("Produto salvo com sucesso.");
         
            Alert alerta = new Alert(Alert.AlertType.INFORMATION);
            alerta.setTitle("Sucesso");
            alerta.setHeaderText(null);
            alerta.setContentText("Produto salvo com sucesso!");
            alerta.showAndWait();
        } catch (SQLException e) {
            System.out.println("Erro ao salvar produto: " + e.getMessage());
        }
    }
}
