package com.minhaloja.sistema_pagamento;

import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.minhaloja.sistema_pagamento.util.Conexao;
import javafx.application.Application;
import javafx.application.Platform;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.stage.Stage;

public class App extends Application {

    private static File logFile;

    @Override
    public void start(Stage stage) {
        try {
            // Captura exceções não tratadas da JavaFX Application Thread
            Thread.setDefaultUncaughtExceptionHandler((thread, throwable) -> {
                logarErro(throwable);
                exibirAlertaErro();
            });

            FXMLLoader loader = new FXMLLoader(getClass().getResource("/telaInicial.fxml"));
            Parent root = loader.load();
            Scene scene = new Scene(root);
            stage.setResizable(false);
            stage.setMaximized(false);
            stage.setTitle("FPS_Commerce");
            stage.setScene(scene);
            stage.show();
        } catch (Exception e) {
            logarErro(e);
            exibirAlertaErro();
        }
    }

    public static void main(String[] args) {
        prepararArquivoDeLog();
        try {
            Conexao.conectar();
            launch(args);
        } catch (Throwable t) {
            logarErro(t);
        }
    }

    private static void prepararArquivoDeLog() {
        try {
            String pastaLog = "logs";
            File pasta = new File(pastaLog);
            if (!pasta.exists()) {
                pasta.mkdir();
            }

            String dataHora = new SimpleDateFormat("yyyy-MM-dd_HH-mm-ss").format(new Date());
            logFile = new File(pastaLog + File.separator + "log_" + dataHora + ".txt");

        } catch (Exception e) {
            e.printStackTrace(); // Se falhar, mostra no console mesmo
        }
    }

    private static void logarErro(Throwable throwable) {
        try (PrintWriter writer = new PrintWriter(new FileWriter(logFile, true))) {
            String dataHora = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date());
            writer.println("[" + dataHora + "] ERRO:");
            throwable.printStackTrace(writer);
            writer.println();
        } catch (Exception e) {
            System.err.println("Falha ao salvar log: " + e.getMessage());
        }
        throwable.printStackTrace(); // Também mostra no console
    }

    private static void exibirAlertaErro() {
        Platform.runLater(() -> {
            Alert alert = new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Erro no Sistema");
            alert.setHeaderText("Ocorreu um erro inesperado");
            alert.setContentText("Um log foi salvo na pasta 'logs/'.");
            alert.showAndWait();
        });
    }
}
